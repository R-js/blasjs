const base64 = 
'AGFzbQEAAAABDQFgCX9/f398fHx8fwACEQEDZW52CG1hdHJpY2VzAgAAAwIBAAcUAghtYXRyaWNlcwIABWNzeXJrAAAKoQgBnggLAXwDfwF8AX8BfAZ/AXwDfwJ8AX8CfCAHRAAAAAAAAAAAYSILIAZEAAAAAAAAAABhcSETQQAgBkQAAAAAAADwP2EgC3EiFUEAIAMgBUQAAAAAAAAAAGEgBEQAAAAAAAAAAGFxIgsbG0EBIAIbBEAPCyACQQF0IRAgCwRAA0AgAiAMSwRAIAogDEEBakEBdGogCiAQaiAAG0EDdCIDIAogCiAMQQF0aiAAG0EDdCIBayELIBMEQCAIBEAgDkEAIAv8CwAgCyAOaiEOBSABQQAgC/wLAAsFA0AgASADSQRAIA4gASAIGyILKwMAIQQgCyAGIASiIAcgC0EIaisDACIFoqE5AwAgCyAGIAWiIAcgBKKgOQMIIAFBEGohASAOQRBqIQ4MAQsLCyAMQQFqIQwgCiAQaiEKDAELCw8LIAIgAkEBamwgAiACbEEBdCAIG0EDdCEUIAEEQCADQQF0IRcDQCACIAxLBEAgCiAMQQFqQQF0aiAKIBBqIAAbQQN0IRggCiAKIAxBAXRqIAAbQQN0IgEgEEEDdHAgA2whCwNAIAEgGEkEQEQAAAAAAAAAACEJRAAAAAAAAAAAIQ8gDiABIAgbIhkrAwAhGiAZKwMIIRtBACERA0AgESAXSQRAIBFBA3QiHCALIBRqaiEVIAkgEiAUaiAcaiIcKwMAIg0gFSsDACIWoiAcKwMIIh0gFSsDCCIeoqGgIQkgDyANIB6iIB0gFqKgoCEPIBFBAmohEQwBCwsgBCAJoiAFIA+ioSENIAQgD6IgBSAJoqAhCSATRQRAIA0gBiAaoiAHIBuioaAhDSAJIAYgG6IgByAaoqCgIQkLIBkgDTkDACAZIAk5AwggAUEQaiEBIAsgF0EDdGohCyAOQRBqIQ4MAQsLIAxBAWohDCAKIBBqIQogEiAXQQN0aiESDAELCwUDQCACIApLBEAgDCAKQQFqQQF0aiAMIBBqIAAbQQN0IRcgDCAMIApBAXRqIAAbQQN0IQEDQCABIBdJBEAgASAQQQN0cCELIApBBHQhEUQAAAAAAAAAACEJRAAAAAAAAAAAIQ9BACESA0AgAyASSwRAIAkgCyAUaiIYKwMAIg0gESAUaiIZKwMAIhaiIBgrAwgiGiAZKwMIIhuioaAhCSAPIA0gG6IgGiAWoqCgIQ8gEkEBaiESIBBBA3QiGCALaiELIBEgGGohEQwBCwsgBCAJoiAFIA+ioSEWIAQgD6IgBSAJoqAhCSAOIAEgCBsiCyATBHwgFgUgCysDACENIAsrAwghDyAJIBUEfCAPBSAGIA+iIAcgDaKgIQkgBiANoiAHIA+ioSENIAkLoCEJIBYgDaALOQMAIAsgCTkDCCABQRBqIQEgDkEQaiEODAELCyAKQQFqIQogDCAQaiEMDAELCwsLAJMBBG5hbWUBDwEADG1vZHVsZS9jc3lyawJ1AQAfAAEwAQExAgEyAwEzBAE0BQE1BgE2BwE3CAE4CQE5CgIxMAsCMTEMAjEyDQIxMw4CMTQPAjE1EAIxNhECMTcSAjE4EwIxORQCMjAVAjIxFgIyMhcCMjMYAjI0GQIyNRoCMjYbAjI3HAIyOB0CMjkeAjMwBgQBAAEw';
export type CSYRKfn = (
    upper: boolean,
    transPose: boolean,
    n: number,
    k: number,
    alphaRe: number,
    alphaIm: number,
    betaRe: number,
    betaIm: number,
    isPacked: boolean
) => void;

type CSYRKMap = {
    storage: WebAssembly.Memory
    csyrk: CSYRKfn
}

export default function initWasmCSYRK64(storage?: WebAssembly.Memory): CSYRKMap {
    const binary = Buffer.from(base64, 'base64');
    const mod = new WebAssembly.Module(binary);
    const mem = storage ? storage : new WebAssembly.Memory({ initial: 1 });
    const instance = new WebAssembly.Instance(mod, { env: { matrices: mem } });
    return {
        storage: mem,
        csyrk: instance.exports.csyrk as CSYRKfn
    }
}